version: "3.9"

services:
    api:
        build:
            context: ./desafio-agent-main
            dockerfile: Dockerfile
        container_name: agent-api
        ports:
            - "8000:8000"
        env_file:
            - ./desafio-agent-main/.env
        environment:
            # Banco
            - DATABASE_HOST=db
            - DATABASE_PORT=5432
            - DATABASE_USER=postgres
            - DATABASE_PASSWORD=postgres
            - DATABASE_NAME=desafio
            - DATABASE_URL=postgresql+psycopg2://postgres:postgres@db:5432/desafio
            # LLM / RAG
            - OLLAMA_BASE_URL=http://ollama:11434
            - OLLAMA_MODEL=gemma:2b-instruct
            - LLM_PROVIDER=ollama
            # REDIS
            - REDIS_URL=redis://redis:6379/0
        depends_on:
            db:
                condition: service_healthy
            chroma:
                condition: service_started
            ollama:
                condition: service_started
            redis:
                condition: service_started
        volumes:
            - ./chroma_db:/app/chroma_db
            - ./ollama_data:/root/.ollama
            - ./desafio-agent-main:/app

    frontend:
        build:
            context: ./desafio-agent-main/src/frontend
            dockerfile: Dockerfile
        container_name: frontend
        ports:
            - "5173:5173"
        volumes:
            - ./desafio-agent-main/src/frontend:/app
            - /app/node_modules
        environment:
            - CHOKIDAR_USEPOLLING=true
            - VITE_API_URL=http://localhost:8000/api/v1
        depends_on:
            - api

    db:
        image: postgres:15
        container_name: postgres-db
        environment:
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: postgres
            POSTGRES_DB: desafio
        ports:
            - "5432:5432"
        volumes:
            - ./pgdata:/var/lib/postgresql/data
        healthcheck:
            test: ["CMD-SHELL", "pg_isready -U postgres -d desafio"]
            interval: 5s
            timeout: 5s
            retries: 5

    chroma:
        image: ghcr.io/chroma-core/chroma:latest
        container_name: chroma
        ports:
            - "8005:8000"
        environment:
            - CHROMA_SERVER=true
            - CHROMA_DB_IMPL=duckdb+parquet
        volumes:
            - ./chroma_db:/chroma_db

    ollama:
        image: ollama/ollama:latest
        container_name: ollama
        ports:
            - "11434:11434"
        environment:
            - OLLAMA_MODEL=${OLLAMA_MODEL}
            - OLLAMA_EMBED_MODEL=${OLLAMA_EMBED_MODEL:-nomic-embed-text}
        volumes:
            - ./ollama_data:/root/.ollama
        restart: unless-stopped
        entrypoint: >
            sh -c "
              /bin/ollama serve &
              sleep 10 &&
              ollama pull nomic-embed-text &&
              ollama pull llama3 &&
              wait
            "
    redis:
        image: redis:7
        container_name: redis
        ports:
            - "6379:6379"
        restart: unless-stopped
